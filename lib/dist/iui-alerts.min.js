!function(){"use strict";angular.module("iui.alerts",[])}(),function(){"use strict";function iuiAlertPlaceholder(){function link(scope,element,attrs,controller){controller.activate(attrs.id)}var directive={restrict:"E",scope:{},templateUrl:"/$iui-alerts/alerts/iui-alert-placeholder.html",controller:AlertPlaceholderController,controllerAs:"alertPlaceholder",link:link};return directive}function AlertPlaceholderController(iuiAlertService,iuiAlertLabels){function activate(placeholderId){function closeAlert(){return iuiAlertService.closeAlert(placeholderId)}vm.alerts=iuiAlertService.getCurrent(placeholderId),vm.closeAlert=closeAlert}var vm=this;vm.labels=iuiAlertLabels,vm.activate=activate}angular.module("iui.alerts").directive("iuiAlertPlaceholder",iuiAlertPlaceholder),AlertPlaceholderController.$inject=["iuiAlertService","iuiAlertLabels"]}(),function(){"use strict";angular.module("iui.alerts").factory("iuiAlertService",["$timeout","iuiAlertsConfig",function(timeout,iuiAlertsConfig){var placements={};return{getCurrent:function(id){return placements[id]||(placements[id]={}),placements[id||iuiAlertsConfig.defaultPlacement]||{}},add:function(placement,alertObject){var activeFor=alertObject.activeFor||0;placement=placement||iuiAlertsConfig.defaultPlacement;var currentPlacement=placements[placement];currentPlacement||(currentPlacement=placements[placement]={}),"danger"===alertObject.type&&(activeFor=0),currentPlacement.callback=alertObject.callback;var defaults={templateUrl:iuiAlertsConfig.defaultAlertTemplate},overrides={activeFor:activeFor,placement:placement};currentPlacement.alert=_.extend({},defaults,alertObject,overrides),currentPlacement.promise&&timeout.cancel(currentPlacement.promise),0!==activeFor&&(currentPlacement.promise=timeout(function(){currentPlacement.alert={},currentPlacement.callback&&currentPlacement.callback()},void 0!==activeFor?activeFor:iuiAlertsConfig.defaultTimeOut))},closeAlert:function(id){var placement=this.getCurrent(id);placement.alert={},timeout.cancel(placement.promise),placement.callback&&placement.callback()},clearAll:function(){_.each(placements,function(placement){placement.alert={},timeout.cancel(placement.promise)})},clear:function(id){if(id){var current=this.getCurrent(id);if(!current)return;current.alert={},timeout.cancel(current.promise)}else this.clearAll()}}}])}(),function(){"use strict";angular.module("iui.alerts").value("iuiAlertLabels",{close:"Close"}).constant("iuiAlertsConfig",{defaultAlertTemplate:"/$iui-alerts/alerts/iui-default-alert.html",defaultTimeOut:2e4,defaultPlacement:"alert_appTop"})}(),function(){"use strict";angular.module("iui.alerts").filter("to_trusted",["$sce",function($sce){return function(text){return $sce.trustAsHtml(text)}}])}(),function(module){try{module=angular.module("iui.alerts")}catch(e){module=angular.module("iui.alerts",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("/$iui-alerts/alerts/iui-alert-placeholder.html",'<div \n  ng-if="alertPlaceholder.alerts.alert.message" \n  class="alert-wrapper">\n  <div \n    class="alert alert-{{alertPlaceholder.alerts.alert.type}}" \n    ng-class="{\'alert-dismissible\': alertPlaceholder.alerts.alert.canClose}"\n    role="alert">\n    <button \n      ng-if="alertPlaceholder.alerts.alert.canClose"\n      type="button" \n      class="close" \n      aria-label="{{alertPlaceholder.labels.close}}" \n      ng-click="alertPlaceholder.closeAlert()">\n      <span aria-hidden="true">&times;</span>\n    </button>\n    <div\n      class="alert-message"\n      ng-include="alertPlaceholder.alerts.alert.templateUrl"></div>\n  </div>\n</div>')}])}(),function(module){try{module=angular.module("iui.alerts")}catch(e){module=angular.module("iui.alerts",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("/$iui-alerts/alerts/iui-default-alert.html",'<div ng-bind-html="alertPlaceholder.alerts.alert.message | to_trusted"></div>')}])}();