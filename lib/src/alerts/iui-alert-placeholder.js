/*doc
---
title: iui-alert-placeholder
name: iui-alert-placeholder
category: directives
---
Directive that creates a placeholder area for alerts generated by `iuiAlertService`.

The id is used as the unique identifier for the iuiAlertService.
Always prefix the id with `alert_` like `alert_wizardStep`
This prefix allows us to easily identify alerts in the codebase

Alerts with `type: warning` (red color) should never have a timeout.

```html_example
<iui-alert-placeholder id="alert_exampleArea"></iui-alert-placeholder>
<div ng-controller="AlertController as alertMain">
  <button 
    class="btn btn-default" 
    ng-click="alertMain.iuiAlertService.add('alert_exampleArea', { type: 'info', activeFor: 4000, canClose: true, message: 'Ah, it\'s the old... trick.'})">
    Trigger Example Area Alert (4 second timeout)
  </button>
  <button 
    class="btn btn-default" 
    ng-click="alertMain.iuiAlertService.add('alert_appTop', { type: 'danger', message: 'Pardon me while I get my shoe phone.'})">
    Trigger App Top Alert
  </button>
  <button 
    class="btn btn-default" 
    ng-click="alertMain.iuiAlertService.clear('alert_exampleArea')">
    Hide Example Area Alert
  </button>
  <button 
    class="btn btn-default" 
    ng-click="alertMain.iuiAlertService.clearAll()">
    Hide ALL Alerts
  </button>
</div>
```

```js_example
app.controller('AlertController', ['iuiAlertService', function(iuiAlertService) {
  this.iuiAlertService = iuiAlertService;
}]);
```
*/

/* directive for displaying alerts in a specific area */

iuiAlertsModule.directive('iuiAlertPlaceholder', ['iuiAlertService', function (iuiAlertService) {
  'use strict';
  return {
    restrict: 'E',
    scope: {},
    templateUrl: app.root + '$iui-alerts/alerts/iui-alert-placeholder.html',

    link: function(scope, element, attrs) {
      var alertId = attrs.id;
      scope.placementAlerts = iuiAlertService.getCurrent(alertId);

      scope.closeAlert = function() {
        iuiAlertService.closeAlert(alertId);
      };
    }

  };
}]);